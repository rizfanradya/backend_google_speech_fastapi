services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: google_speech
      POSTGRES_DB: google_speech
      POSTGRES_PASSWORD: O8IfbjmMtQek06kBsy8WzveVxu0GLGMo5RExBZadbn5AUA0UQh
    ports:
      - "15432:5432"
    volumes:
      - db_data_pgsql:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U google_speech" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    ports:
      - "16379:6379"
    command: redis-server --appendonly yes --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    restart: always
    volumes:
      - backend_uploads:/app/data/uploads
      - backend_downloads:/app/data/downloads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  db_data_pgsql:
  redis_data:
  backend_uploads:
  backend_downloads: